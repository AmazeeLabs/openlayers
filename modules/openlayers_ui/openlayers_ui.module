<?php
// $Id$

/**
 * @file
 * Main OpenLayers UI Hook Implemntations
 *
 * This file holds the main Drupal hook functions,
 * for the OpenLayers UI module.
 *
 * @ingroup openlayers
 */

/**
 * Implementation of hook_help().
 */
function openlayers_ui_help($path, $arg) {
  $output = '';

  switch ($path) {
    case 'admin/help#openlayers_ui':
      $output = '<p>'. t('The OpenLayers UI module provides a User Interface to create map objects.') .'</p>';
      return $output;

  }
}

/**
 * Implementation of hook_theme().
 */
function openlayers_ui_theme($existing, $type, $theme, $path) {
  return array(
    'openlayers_ui_form_layer_description' => array(
      'arguments' => array(
        'layer_title' => '',
        'layer_description' => '',
      ),
      'file' => 'includes/openlayers_ui.theme.inc',
    ),
    'openlayers_ui_form_projection_description' => array(
      'arguments' => array(
        'projection_title' => '',
        'available_layers' => array(),
        'layers' => array(),
      ),
      'file' => 'includes/openlayers_ui.theme.inc',
    ),
    'openlayers_ui_presets_form' => array(
      'arguments' => array(
        'form' => array()
      ),
      'file' => 'includes/openlayers_ui.theme.inc',
    ),
    'openlayers_ui_presets_form_layers' => array(
      'arguments' => array(
        'form' => array()
      ),
      'file' => 'includes/openlayers_ui.theme.inc',
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function openlayers_ui_menu() {
  $items = array();
  // Note how menu system translate.  Some good, some bad.
  $object_types = array(
    'presets' => array(
      'name' => 'Presets',
      'single' => 'preset',
    ),
    'layers' => array(
      'name' => 'Layers',
      'single' => 'layer',
    ),
    'styles' => array(
      'name' => 'Styles',
      'single' => 'style',
    ),
  );
  
  // Since all objects have the same basic interfaces
  foreach ($object_types as $type => $t) {
    // List
    $items['admin/settings/openlayers/' . $type] = array(
      'title' => $t['name'],
      'description' => 'Create OpenLayers '. $t['name'],
      'page callback' => 'openlayers_ui_object_list',
      'page arguments' => array(3),
      'access arguments' => array('administer openlayers'),
      'file' => 'includes/openlayers_ui.ui.inc',
      'type' => MENU_LOCAL_TASK,
      'weight' => -10,
    );
    $items['admin/settings/openlayers/' . $type . '/list'] = array(
      'title' => 'List',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -20,
    );
    // Add new
    $items['admin/settings/openlayers/' . $type . '/add'] = array(
      'title' => 'Add',
      'description' => 'Add OpenLayers '. $t['name'],
      'page callback' => 'drupal_get_form',
      'page arguments' => array('openlayers_ui_' . $type .'_form'),
      'access arguments' => array('administer openlayers'),
      'file' => 'includes/openlayers_ui.ui.inc',
      'type' => MENU_LOCAL_TASK,
      'weight' => -10,
    );
    // Clone
    $items['admin/settings/openlayers/' . $type . '/add/%openlayers_' . $t['single']] = array(
      'title' => 'Clone',
      'description' => 'Add OpenLayers '. $t['name'],
      'page callback' => 'drupal_get_form',
      'page arguments' => array('openlayers_ui_' . $type . '_form', 5),
      'access arguments' => array('administer openlayers'),
      'file' => 'includes/openlayers_ui.ui.inc',
      'type' => MENU_NORMAL_ITEM,
      'weight' => -10,
    );
    // Edit
    $items['admin/settings/openlayers/' . $type . '/%openlayers_' . $t['single'] . '/edit'] = array(
      'title' => 'Edit',
      'description' => 'Edit OpenLayers '. $t['name'],
      'page callback' => 'drupal_get_form',
      'page arguments' => array('openlayers_ui_' . $type . '_form', 4, TRUE),
      'access arguments' => array('administer openlayers'),
      'file' => 'includes/openlayers_ui.ui.inc',
      'type' => MENU_LOCAL_TASK,
      'tab_parent' => 'admin/settings/openlayers/' . $type,
    );
    // Delete
    $items['admin/settings/openlayers/' . $type . '/%openlayers_' . $t['single'] . '/delete'] = array(
      'title' => 'Delete',
      'description' => 'Delete OpenLayers '. $t['name'],
      'page callback' => 'drupal_get_form',
      'page arguments' => array('openlayers_ui_object_delete', 3, 4),
      'access arguments' => array('administer openlayers'),
      'file' => 'includes/openlayers_ui.ui.inc',
      'type' => MENU_LOCAL_TASK,
      'tab_parent' => 'admin/settings/openlayers/' . $type,
    );
    // Export
    $items['admin/settings/openlayers/' . $type . '/%openlayers_' . $t['single'] . '/export'] = array(
      'title' => 'Export',
      'description' => 'Export OpenLayers '. $t['name'],
      'page callback' => 'drupal_get_form',
      'page arguments' => array('openlayers_ui_object_export', 3, 4),
      'access arguments' => array('administer openlayers'),
      'file' => 'includes/openlayers_ui.ui.inc',
      'type' => MENU_LOCAL_TASK,
      'tab_parent' => 'admin/settings/openlayers/' . $type,
    );
    
    // TODO: ADD Import
  }
  
  // AHAH Callback for presets
  $items['openlayers/ahah/preset'] = array(
    'title' => 'OpenLayers AHAH',
    'page callback' => 'openlayers_ui_preset_ahah',
    'access callback' => TRUE,
    'file' => 'includes/openlayers_ui.ui.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}