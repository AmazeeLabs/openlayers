<?php
// $Id$

/**
 * @file
 * This file holds the functions for the installing
 * and enabling of the openlayers module.
 *
 * @ingroup openlayers
 */

/**
 * Implementation of hook_install().
 */
function openlayers_install() {
  // Create tables
  if (drupal_install_schema('openlayers')) {
    // Create default preset in the DB
    $default = _openlayers_default_preset();
    $created_default = _openlayers_install_save_preset($default);
    if ($created_default) {
      drupal_set_message(t('OpenLayers Default Preset created successfully.'));
    }
    else {
      drupal_set_message(t('OpenLayers Default Preset not created successfully, please re-install the module.'), 'error');
    }
  }
  else {
    drupal_set_message(t('OpenLayers Schema did not install properly.'), 'error');
  }
}

/**
 * Implementation of hook_uninstall().
 */
function openlayers_uninstall() {
  // Remove tables
  drupal_uninstall_schema('openlayers');
  
  // Get module variables
  $results = db_query("SELECT v.name FROM {variable} AS v WHERE v.name LIKE '%s%%'", 'openlayers_');
  // Remove variables
  while ($row = db_fetch_array($results)) {
    variable_del($row['name']);
  }
}

/**
 * Implementation of hook_schema.
 */
function openlayers_schema() {
  $schema['openlayers_map_presets'] = array(
    'fields' => array(
      'preset_id' => array(
        'description' => t('The primary identifier for an OpenLayers preset.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'preset_name' => array(
        'description' => t('The primary identifier for the preset.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'preset_title' => array(
        'description' => t('The title of the preset.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'preset_description' => array(
        'description' => t('The description of the preset.'),
        'type' => 'text',
        'not null' => TRUE,
      ),
      'preset_data' => array(
        'description' => t('The serialized map.'),
        'type' => 'text',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('preset_id'),
    'unique key' => array('preset_name'),
  );
  
  return $schema;
}

/**
 * Initialize Default Preset
 *
 * This is the "system defaults" that come with the module.
 * The goal of these defaults is so that a map can be rendered
 * simply by installing the OL API module.
 *
 */
function _openlayers_default_preset() {
  // Create map array
  $default_map = array(
    'projection' => '4326',
    'width' => 'auto',
    'default_layer' => 'openlayers_default_wms',
    'height' => '300px',
    'center' => array(
      'lat' => '0',
      'lon' => '0',
      'zoom' => '2',
    ),
    'options' => array(
      'displayProjection' => '4326',
    ),
    'controls' => array(
      'LayerSwitcher' => TRUE,
      'Navigation' => TRUE,
      'PanZoomBar' => TRUE,
      'MousePosition' => TRUE,
    ),
  );
  // Create preset array
  $preset = array(
    'preset_name' => 'default',
    'preset_title' => t('Default Map'),
    'preset_description' => t('This is the default map preset that comes with the OpenLayers module.'),
    'preset_data' => $default_map,
  );
  
  return $preset;
}

/**
 * OpenLayers Save Preset for Install
 *
 * Given an array of data, save the preset
 *
 * @ingroup openlayers_api
 * @param $preset
 *   Array of data for preset
 * @return
 *   Boolean of whether successful
 */
function _openlayers_install_save_preset($preset = array()) {
  $successful = FALSE;

  // Check for name
  if (empty($preset['preset_name'])) {
    return $successful;
  }

  // Serialize
  $preset['preset_data'] = (is_array($preset['preset_data'])) 
    ? serialize($preset['preset_data']) : '';

  $query = "INSERT INTO {openlayers_map_presets} 
    (preset_name, preset_title, preset_description, preset_data)
    VALUES ('%s', '%s', '%s', '%s')";
  
  $successful = db_query($query, $preset['preset_name'], $preset['preset_title'], $preset['preset_description'], $preset['preset_data']);
  
  return $successful;
}